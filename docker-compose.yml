networks:
  mptify_dev:
    driver: bridge

services:
  server:
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    environment:
      - NODE_PORT=${NODE_PORT:-8000}
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - ${NODE_PORT:-8000}:8000
    networks:
      - mptify_dev
  mongodb:
    image: mongo:5.0.9-focal
    restart: always
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - ./.docker/mongo/data:/data/db
      - ./.docker/mongo/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - ${DB_FORWARD_PORT:-27017}:27017
    networks:
      - mptify_dev

  redis:
    image: redis
    restart: always
    environment:
      - REDIS_PORT_NUMBER=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    ports:
      - ${REDIS_FORWARD_PORT:-6379}:${REDIS_PORT:-6379}
    networks:
      - mptify_dev

volumes:
  mongo_data: