name: Deploy to ECR and Update Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up version
        id: version
        run: echo "::set-output name=version::$(date +'%Y%m%d-%H%M%S')"

      - name: Login to Amazon ECR
        run: |
          echo Logging in to Amazon ECR...
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and push Docker image
        run: |
          echo Building the Docker image...
          docker build -t ${{ secrets.IMAGE_REPO_NAME }}:${{ steps.version.outputs.version }} .
          docker tag ${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }}
          echo Pushing the Docker image...
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }}

      - name: Create Elastic Beanstalk Version 
        run: |
          echo Creating new application version...
          aws elasticbeanstalk create-application-version --application-name Chel --version-label ${{ steps.version.outputs.version }} --source-bundle S3Bucket=elbdockerrun,S3Key=Dockerrun.aws.json

      - name: Update Elastic Beanstalk environment
        run: |
          echo Updating Elastic Beanstalk environment...
          aws elasticbeanstalk update-environment --application-name Chel --environment-name Chel-env --version-label ${{ steps.version.outputs.version }}
